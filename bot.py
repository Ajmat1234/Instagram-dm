from instabot import Bot
import os
import base64
import json
import shutil
import uuid
import sys

# 1. Environment Variables (Railway ‡§™‡§∞ ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç)
USERNAME = os.environ["USERNAME"]
PASSWORD = os.environ["PASSWORD"]
SESSION_DATA = os.environ.get("SESSION_DATA", "")

# 2. Session Files ‡§∏‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç
def clear_sessions():
    if os.path.exists("config"):
        shutil.rmtree("config")
    print("‚úÖ ‡§™‡•Å‡§∞‡§æ‡§®‡•á Sessions ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§ï‡§ø‡§è ‡§ó‡§è")

# 3. ‡§®‡§Ø‡§æ Session ‡§¨‡§®‡§æ‡§è‡§Å
def generate_session():
    try:
        bot = Bot()
        if not bot.login(username=USERNAME, password=PASSWORD):
            raise Exception("‚ùå Instagram Login Failed! ‡§ï‡•ç‡§∞‡•á‡§°‡•á‡§Ç‡§∂‡§ø‡§Ø‡§≤‡•ç‡§∏ ‡§ú‡§æ‡§Å‡§ö‡•á‡§Ç")
        
        # Session Data ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç
        session = {
            "uuid": str(uuid.uuid4()),
            "cookie": bot.api.cookie_jar.get_cookies_dict(),
            "device_settings": bot.api.device_settings
        }
        
        # Important Fields ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
        session["cookie"]["ds_user"] = USERNAME
        session["cookie"]["ds_user_id"] = str(bot.user_id)
        session["cookie"]["csrftoken"] = bot.api.token
        
        # Base64 ‡§Æ‡•á‡§Ç Encode ‡§ï‡§∞‡•á‡§Ç
        json_data = json.dumps(session, indent=2)
        encoded = base64.urlsafe_b64encode(json_data.encode()).decode()
        
        # Railway Logs ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Å
        print("\n" + "="*50)
        print("üö® COPY BELOW SESSION_DATA FOR RAILWAY üö®")
        print(encoded)
        print("="*50 + "\n")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        return False

# 4. Main Function
if __name__ == "__main__":
    clear_sessions()
    
    if not SESSION_DATA.strip():
        print("üÜï ‡§®‡§Ø‡§æ Session ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...")
        if generate_session():
            sys.exit(0)  # First Run Complete
        else:
            sys.exit(1)
    
    try:
        # Existing Session Restore
        decoded = json.loads(base64.b64decode(SESSION_DATA))
        bot = Bot()
        
        # Manual Session Load
        bot.api.uuid = decoded["uuid"]
        bot.api.cookie_jar = decoded["cookie"]
        bot.api.device_settings = decoded["device_settings"]
        
        print("‚úÖ Session Restore Successful!")
        
        # DM ‡§≠‡•á‡§ú‡§®‡•á ‡§ï‡§æ ‡§ï‡•ã‡§°
        # ... (‡§Ö‡§™‡§®‡§æ DM Logic ‡§Ø‡§π‡§æ‡§Å ‡§ú‡•ã‡§°‡§º‡•á‡§Ç)
        
    except Exception as e:
        print(f"‚ùå Session Error: {str(e)}")
        print("‚ùó SESSION_DATA ‡§ó‡§≤‡§§ ‡§π‡•à! ‡§á‡§∏‡•á ‡§π‡§ü‡§æ‡§ï‡§∞ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§°‡§ø‡§™‡•ç‡§≤‡•â‡§Ø ‡§ï‡§∞‡•á‡§Ç")
        sys.exit(1)
